#include<stdio.h> 
#include<conio.h> 
int minm(int m,int n) 
{ 
return ((m>n)?n:m); 
} 
void sssp(int cost[20][20],int n,int source,int dest[20]) 
{ 
int s[20],min,w,i,j,v; 
for(i=1;i<=n;i++) 
{ 
s[i]=0; 
dest[i]=cost[source][i]; 
} 
s[source]=1; 
for(i=1;i<=n-1;i++) 
{ 
min=999; 
for(j=1;j<=n;j++) 
if((s[j]==0) && (min>dest[j])) 
{ 
min=dest[j]; 
w=j; 
} 
s[w]=1; 
for(v=1;v<=n;v++) 
if(s[v]==0) 
{ 
dest[v]=minm(dest[v],(dest[w]+cost[w][v])); 
} 
} 
} 
void main() 
{ 
int source,i,j,n; 
int cost[20][20],dest[20]; 
clrscr(); 
printf("enter no of vertices\n"); 
scanf("%d",&n); 
printf("enter source vertex\n"); 
scanf("%d",&source); 
printf("enter cost matrix\n"); 
for(i=1;i<=n;i++) 
for(j=1;j<=n;j++) 
scanf("%d",&cost[i][j]); 
sssp(cost,n,source,dest); 
printf(":the shortest distance is \n");for(i=1;i<=n;i++) 
printf("the cost from %d to %d is %d\t", source,i,dest[i]); 
getch(); 
} 
OUTPUT 
enter no of vertices 
5 
enter source vertex 
1 
enter cost matrix 
0 1 999 3 10 
999 0 5 999 999 
999 999 0 999 1 
999 999 2 0 6 
999 999 999 999 0 
the shortest distance is 
the cost from 1 to 1 is 0 
the cost from 1 to 2 is 1 
the cost from 1to 3 is 5 
the cost from 1 to 4 is 3 
the cost from 1 to 5 is 6
